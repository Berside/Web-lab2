import { observer } from "mobx-react-lite";
import React, { useEffect, useState } from "react";
import "./header.css";
import { useNavigate } from "react-router-dom";
import { ABOUT, CATALOG, CONTACTS, HISTORY, MAIN, OTZIV, PRODUCT, TEAM } from "../../utils/const";
import { getAllContent } from "../../http/content";

const Hheader = observer(() => {
  const history = useNavigate();
  const [content, setContent] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const [searchError, setSearchError] = useState("");

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchContent();
  }, []);

  const fetchContent = async () => {
    try {
      const data = await getAllContent();
      setContent(data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:", error);
    }
  };

  const handleSearch = (e) => {
    e.preventDefault();
    setSearchError(""); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –æ—à–∏–±–∫—É
    
    if (!searchTerm.trim()) {
      setSearchError("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å");
      return;
    }

    // –ò—â–µ–º –Ω–∞–∏–ª—É—á—à–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    const bestMatch = content.reduce((best, item) => {
      if (!item || !item.title) return best;
      
      const title = item.title.toLowerCase();
      const search = searchTerm.toLowerCase();
      
      // –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ - –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const similarity = calculateSimilarity(title, search);
      
      if (similarity > best.similarity) {
        return { similarity, item };
      }
      return best;
    }, { similarity: 0, item: null });

    // –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, > 50%)
    if (bestMatch.similarity > 0.3) {
      history(PRODUCT); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É URL
    } else {
      setSearchError("–¢–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.");
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ö–æ–∂–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫ (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
  const calculateSimilarity = (str1, str2) => {
    const words1 = str1.split(/\s+/);
    const words2 = str2.split(/\s+/);
    
    const commonWords = words1.filter(word => words2.includes(word));
    return commonWords.length / Math.max(words1.length, words2.length);
  };

  return (
    <>
      <header>
        <div className="header-content">
          <div className="login-container">
            <form className="login-form">
              <div className="form-row">
                <label>–õ–û–ì–ò–ù:</label>
                <input type="text" className="login-input" />
              </div>
              <div className="form-row">
                <label>–ü–ê–†–û–õ–¨:</label>
                <input type="password" className="login-input" />
              </div>
              <div className="form-row">
                <div className="spacer"></div>
                <button type="submit" className="login-btn">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</button>
                <button type="submit" className="reg-btn">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
              </div>
            </form>
          </div>
          <p className="babyshka">–õ–æ–≥–æ—Ç–∏–ø</p>
          <h1>–ì–ê–õ–ê–ö–¢–ò–ö–ê</h1>
          <p className="welcome-message">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π!</p>
          <div className="search-container">
            <form className="search-form" onSubmit={handleSearch}>
              <input 
                type="text" 
                className="search-input" 
                placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." 
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
              <button type="submit" className="search-btn" id="search-btn">üîç</button>
              {searchError && (
                <div className="search-error">
                  {searchError}
                </div>
              )}
            </form>
          </div>
        </div>
      </header>
      <nav className="main-menu">
        <ul>
          <li><a onClick={() => history(MAIN)} className="osnova">–ì–ª–∞–≤–Ω–∞—è</a></li>
          <li><a onClick={() => history(ABOUT)}>–û –Ω–∞—Å</a></li>
          <li><a onClick={() => history(HISTORY)}>–ò—Å—Ç–æ—Ä–∏—è —Ñ–∏—Ä–º—ã</a></li>
          <li><a onClick={() => history(TEAM)}>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</a></li>
          <li><a onClick={() => history(CATALOG)}>–ö–∞—Ç–∞–ª–æ–≥</a></li>
          <li><a onClick={() => history(CONTACTS)}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
          <li><a onClick={() => history(OTZIV)}>–û—Ç–∑—ã–≤—ã</a></li>
        </ul>
      </nav>
    </>
  );
});

export default Hheader;